name: Release CLI

on:
  push:
    tags:
      - 'cli-v*'

# Needs write permission to create GitHub Releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: rolypoly
            asset_name: rolypoly-linux-x86_64-build${{ github.run_number }}
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: rolypoly.exe
            asset_name: rolypoly-windows-x86_64-build${{ github.run_number }}.exe
          - os: macOS-latest
            target: x86_64-apple-darwin
            binary_name: rolypoly
            asset_name: rolypoly-macos-x86_64-build${{ github.run_number }}

    steps:
    - uses: actions/checkout@v3

    - name: Determine relevant changes (CLI paths)
      id: changes
      shell: bash
      run: |
        set -euo pipefail
        # Find previous CLI tag (excluding current)
        CURRENT_TAG="${GITHUB_REF_NAME}"
        PREV_TAG=$(git tag --list 'cli-v*' --sort=-v:refname | grep -v "^${CURRENT_TAG}$" | head -n1 || true)
        echo "current=${CURRENT_TAG}" >> $GITHUB_OUTPUT
        echo "previous=${PREV_TAG}" >> $GITHUB_OUTPUT
        if [[ -z "$PREV_TAG" ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        CHANGED=$(git diff --name-only "$PREV_TAG"..."$CURRENT_TAG" | \
          grep -E '^(src/|Cargo.toml|benches/|tests/|scripts/)' | grep -v '^gui/' | wc -l | xargs)
        if [[ "$CHANGED" != "0" ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        default: true

    - name: Build
      if: steps.changes.outputs.changed == 'true'
      run: cargo build --release --target ${{ matrix.target }} --bin rolypoly

    - name: Run tests
      if: steps.changes.outputs.changed == 'true'
      run: cargo test --release --target ${{ matrix.target }}

    - name: Package binary
      if: steps.changes.outputs.changed == 'true'
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.binary_name }}
        else
          tar czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.binary_name }}
        fi

    - name: Upload artifact
      if: steps.changes.outputs.changed == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: |
          ${{ matrix.asset_name }}.zip
          ${{ matrix.asset_name }}.tar.gz

  scorecard:
    name: Generate Scorecard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Run scorecard
        run: |
          bash scripts/scorecard.sh > /dev/null
      - name: Upload Scorecard
        uses: actions/upload-artifact@v3
        with:
          name: scorecard
          path: SCORECARD.md

  release:
    needs: [build, scorecard]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/cli-v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
    - name: Generate changelog
      shell: bash
      run: |
        bash scripts/changelog.sh "${GITHUB_REF_NAME}" > CHANGELOG_BODY.md
        if [ -f scorecard/SCORECARD.md ]; then
          echo >> CHANGELOG_BODY.md
          echo '---' >> CHANGELOG_BODY.md
          echo >> CHANGELOG_BODY.md
          cat scorecard/SCORECARD.md >> CHANGELOG_BODY.md
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */rolypoly-*
        prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
        body_path: CHANGELOG_BODY.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
