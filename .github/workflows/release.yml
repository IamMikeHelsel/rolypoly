name: Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: rusty
            asset_name: rusty-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: rusty.exe
            asset_name: rusty-windows-x86_64.exe
          - os: macOS-latest
            target: x86_64-apple-darwin
            binary_name: rusty
            asset_name: rusty-macos-x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        default: true

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Run tests
      run: cargo test --release --target ${{ matrix.target }}

    - name: Package binary
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.binary_name }}
        else
          tar czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.binary_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: |
          ${{ matrix.asset_name }}.zip
          ${{ matrix.asset_name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */rusty-*
        body: |
          ## Changes
          
          * Cross-platform ZIP archiver
          * Full CLI interface with create, extract, list, validate, stats, and hash commands
          * Progress indicators for long operations
          * Comprehensive integrity checking
          * SHA256 file hashing
          
          ## Installation
          
          Download the appropriate binary for your platform:
          - Linux: `rusty-linux-x86_64.tar.gz`
          - Windows: `rusty-windows-x86_64.exe.zip`
          - macOS: `rusty-macos-x86_64.tar.gz`
          
          ## Usage
          
          ```bash
          # Create archive
          rusty create archive.zip file1.txt file2.txt
          
          # Extract archive
          rusty extract archive.zip
          
          # List contents
          rusty list archive.zip
          
          # Validate integrity
          rusty validate archive.zip
          
          # Show statistics
          rusty stats archive.zip
          
          # Calculate file hash
          rusty hash file.txt
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}