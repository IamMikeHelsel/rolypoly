name: Release GUI

on:
  push:
    tags:
      - 'gui-v*'

# Needs write permission to create GitHub Releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Determine relevant changes (GUI paths)
        id: changes
        shell: bash
        run: |
          set -euo pipefail
          CURRENT_TAG="${GITHUB_REF_NAME}"
          PREV_TAG=$(git tag --list 'gui-v*' --sort=-v:refname | grep -v "^${CURRENT_TAG}$" | head -n1 || true)
          echo "current=${CURRENT_TAG}" >> $GITHUB_OUTPUT
          echo "previous=${PREV_TAG}" >> $GITHUB_OUTPUT
          if [[ -z "$PREV_TAG" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          CHANGED=$(git diff --name-only "$PREV_TAG"..."$CURRENT_TAG" | \
            grep -E '^(gui/|icons/|scripts/)' | wc -l | xargs)
          if [[ "$CHANGED" != "0" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Flutter
        if: steps.changes.outputs.changed == 'true'
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Enable desktop targets
        if: steps.changes.outputs.changed == 'true'
        run: |
          flutter config --enable-macos-desktop --enable-windows-desktop --enable-linux-desktop

      - name: Install Linux system deps
        if: steps.changes.outputs.changed == 'true'
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev liblzma-dev libstdc++-12-dev ninja-build libglu1-mesa-dev

      - name: Prepare GUI project
        if: steps.changes.outputs.changed == 'true'
        working-directory: gui
        run: |
          # Create platform folders if missing
          flutter create .
          flutter pub get

      - name: Analyze
        if: steps.changes.outputs.changed == 'true'
        working-directory: gui
        run: flutter analyze

      - name: Run widget tests
        if: steps.changes.outputs.changed == 'true'
        working-directory: gui
        run: flutter test

      - name: Build GUI
        if: steps.changes.outputs.changed == 'true'
        working-directory: gui
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter build windows --release
          elif [[ "${{ matrix.os }}" == "macOS-latest" ]]; then
            flutter build macos --release
          else
            flutter build linux --release
          fi

      - name: Upload GUI artifact
        if: steps.changes.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: rolypoly-gui-${{ matrix.os }}
          path: |
            gui/build/**/release/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/gui-v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            rolypoly-gui-*/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
